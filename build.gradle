plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.asciidoctor.jvm.convert' version '3.3.2' // Asciidoctor 플러그인
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    snippetsDir = file("build/generated-snippets") // REST Docs에서 생성된 스니펫 디렉토리
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctor'
    attributes 'snippets': snippetsDir
    dependsOn test // 테스트 실행 후 문서 생성
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'io.jsonwebtoken:jjwt-api:0.12.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.2'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    //s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.72'
    implementation 'commons-io:commons-io:2.11.0'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'
    //jasypt
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
    testImplementation 'org.jasypt:jasypt:1.9.3'  // Jasypt 의존성 (테스트용)

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0' // HTTP 요청 라이브러리
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2' // JSON 처리


    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.11.0'

    //rest docs 관련
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.restdocs:spring-restdocs-core'

}

tasks.test {
    useJUnitPlatform() // JUnit 5 플랫폼 사용
}

processResources.dependsOn('copySecret')

tasks.register('copySecret', Copy) {
    from './config' // 서브 모듈 디렉토리 경로
    include "*.yml"  // 설정 파일 복사
    into 'src/main/resources'  // 붙여넣을 위치
}